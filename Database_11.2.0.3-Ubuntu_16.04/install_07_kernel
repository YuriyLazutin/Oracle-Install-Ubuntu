#!/bin/bash

# Oracle pre-install script
# This script will change kernel parameters
# Author: Yuriy Lazutin
# Site: lazutin.info
# Location: Tomsk, Siberia
# Creation: 2020-oct-16
# Donates:
#          https://www.paypal.com/paypalme/yuriylazutin
#          https://www.patreon.com/yuriylazutin

# /etc/sysctl.conf
# /etc/sysctl.d/*.conf
# Look at current parameters
#   sysctl -a
# If we changed a kernel parameters we should apply it via sudo sysctl -p (or reboot)
# Change kernel parameters on the fly
#   echo 0 > /proc/sys/net/ipv4/ip_forward
#   sudo sysctl -w net.ipv4.ip_forward=0
#   sudo sysctl -p


source environment

conf_file="/etc/sysctl.d/60-oracle.conf"
#conf_file="./kernel.conf"

function GetSysParam {
  echo -n "Get current kernel parameter \"${1}\": "
  eval ${2}='$(sysctl ${1})'
  if [ $? -eq 0 ]; then
    echo -e "\033[1;32mDone\033[0m"
  else
    echo -e "\033[1;31mFailed\033[0m"
  fi
}

function GetConfParam {
  echo -n "Try to find overrided kernel parameter \"${1}\" in ${conf_file}: "
  local result_str=$( grep -v "^#\|^ .*#\|^<-->.*#\|^$" ${conf_file} | grep  "${1}" )
  eval ${2}='${result_str}'
  local result=$(echo "${result_str}" | awk '
  {
    for(i=3;i<=NF;i++)
    printf("%s%s", $i, i==NF?"":" ")
  }
  ')
  eval ${3}='${result}'
  if [ ! -z "${result}" ]; then
    echo -e "\033[1;32mFound\033[0m"
  else
    echo -e "\033[1;31mNot found\033[0m"
  fi
}

function UpdateParam {
  echo -n "Setting up \"${1}\" in ${conf_file}: "
  local val_in_sys val_in_conf
  eval val_in_sys='$'${2}
  eval val_in_conf='$'${3}

  if [ ! -z "${val_in_conf}" ]; then
    if awk "BEGIN {return_code=(${val_in_conf} ${6:-\">=\"} ${4}) ? 0 : 1; exit} END {exit return_code}"; then
      echo -e "\033[1;32mAlready exists and meets the requirements\033[0m"
    else
      echo -e "\033[1;31mAlready exists, but does not meets the requirements\033[0m"
      read -p "Do you want to change it (Y/N)?: " user_choice
      if [ "x${user_choice}" == "xY" ] || [ "x${user_choice}" == "xy" ]; then
        eval ${3}='${4}'
        eval ${5}='"Y"'
      fi
    fi
  else
    if awk "BEGIN {return_code=(${val_in_sys} ${6:-\">=\"} ${4}) ? 0 : 1; exit} END {exit return_code}"; then
      echo -e "\033[1;32mCurrent system value meets the requirements\033[0m"
    else
      echo -e "\033[1;31mCurrent system value does not meets the requirements\033[0m"
      read -p "Do you want to change it (Y/N)?: " user_choice
      if [ "x${user_choice}" == "xY" ] || [ "x${user_choice}" == "xy" ]; then
        eval ${3}='${4}'
        eval ${5}='"Y"'
      fi
    fi
  fi
}

function SetupParam {
  echo -n "Setting up \"${1}\" in ${conf_file}: "
  local val_in_sys val_in_conf_str val_in_conf
  eval val_in_sys='$'${2}
  eval val_in_conf_str='$'${3}
  eval val_in_conf='$'${4}
  if [ ! -z "${val_in_conf}" ]; then
    if awk "BEGIN {return_code=(${val_in_conf} ${6:-\">=\"} ${5}) ? 0 : 1; exit} END {exit return_code}"; then
      echo -e "\033[1;32mAlready exists and meets the requirements\033[0m"
    else
      echo -e "\033[1;31mAlready exists, but does not meets the requirements\033[0m"
      read -p "Do you want to change it (Y/N)?: " user_choice
      if [ "x${user_choice}" == "xY" ] || [ "x${user_choice}" == "xy" ]; then
        sudo sed -i "s/${val_in_conf_str}/${1} = ${5}/g" ${conf_file}
      fi
    fi
  else
    if awk "BEGIN {return_code=(${val_in_sys} ${6:-\">=\"} ${5}) ? 0 : 1; exit} END {exit return_code}"; then
      echo -e "\033[1;32mCurrent system value meets the requirements\033[0m"
    else
      echo -e "\033[1;31mCurrent system value does not meets the requirements\033[0m"
      read -p "Do you want to change it (Y/N)?: " user_choice
      if [ "x${user_choice}" == "xY" ] || [ "x${user_choice}" == "xy" ]; then
        sudo sh -c "echo '${1} = ${5}' >> ${conf_file}"
      fi
    fi
  fi
}

function PrintParams {
  printf "\e[1;33m%-40s %-40s %-40s\e[0m\n" "CURRENT" "IN CONFIG" "RECOMMENDED"
  #echo "sem_in_sys: \"${sem_in_sys}\""
  printf "%-40s %-40s %-40s\n" "semmsl_in_sys: ${semmsl_in_sys}"   "semmsl_in_conf: ${semmsl_in_conf}"   "recommended: 250"
  printf "%-40s %-40s %-40s\n" "semmns_in_sys: ${semmns_in_sys}"   "semmns_in_conf: ${semmns_in_conf}"   "recommended: 32000"
  printf "%-40s %-40s %-40s\n" "semopm_in_sys: ${semopm_in_sys}"   "semopm_in_conf: ${semopm_in_conf}"   "recommended: 100"
  printf "%-40s %-40s %-40s\n" "semmni_in_sys: ${semmni_in_sys}"   "semmni_in_conf: ${semmni_in_conf}"   "recommended: 128"
  printf "%-40s %-40s %-40s\n" "shmall_in_sys: ${shmall_in_sys}"   "shmall_in_conf: ${shmall_in_conf}"   "recommended: 2097152"
  printf "%-40s %-40s %-40s\n" "shmmax_in_sys: ${shmmax_in_sys}"   "shmmax_in_conf: ${shmmax_in_conf}"   "recommended: 536870912"
  printf "%-40s %-40s %-40s\n" "shmmni_in_sys: ${shmmni_in_sys}"   "shmmni_in_conf: ${shmmni_in_conf}"   "recommended: 4096"
  printf "%-40s %-40s %-40s\n" "filemax_in_sys: ${filemax_in_sys}" "filemax_in_conf: ${filemax_in_conf}" "recommended: 6815744"
  #echo "lpr_in_sys: \"${lpr_in_sys}\""
  printf "%-40s %-40s %-40s\n" "lpr_min_in_sys: ${lpr_min_in_sys}" "lpr_min_in_conf: ${lpr_min_in_conf}" "recommended: 9000"
  printf "%-40s %-40s %-40s\n" "lpr_max_in_sys: ${lpr_max_in_sys}" "lpr_max_in_conf: ${lpr_max_in_conf}" "recommended: 65500"
  printf "%-40s %-40s %-40s\n" "rmemd_in_sys: ${rmemd_in_sys}"     "rmemd_in_conf: ${rmemd_in_conf}"     "recommended: 262144"
  printf "%-40s %-40s %-40s\n" "rmemmax_in_sys: ${rmemmax_in_sys}" "rmemmax_in_conf: ${rmemmax_in_conf}" "recommended: 4194304"
  printf "%-40s %-40s %-40s\n" "wmemd_in_sys: ${wmemd_in_sys}"     "wmemd_in_conf: ${wmemd_in_conf}"     "recommended: 262144"
  printf "%-40s %-40s %-40s\n" "wmemmax_in_sys: ${wmemmax_in_sys}" "wmemmax_in_conf: ${wmemmax_in_conf}" "recommended: 1048576"
  printf "%-40s %-40s %-40s\n" "aio_in_sys: ${aio_in_sys}"         "aio_in_conf: ${aio_in_conf}"         "recommended: 1048576"
  printf "%-40s %-40s %-40s\n" "shmg_in_sys: ${shmg_in_sys}"       "shmg_in_conf: ${shmg_in_conf}"       "${ORACLE_GROUP} group id: ${group_id}"
}

function PrintConf {
  echo "Current content of ${conf_file}"
  cat ${conf_file}
}





echo -n "Try to find ${conf_file}: "
if [ -f ${conf_file} ]; then
  echo -e "\033[1;32mFound\033[0m"
else
  echo -e "\033[1;31mNot found\033[0m"
fi

GetSysParam "kernel.sem" "sem_in_sys"
semmsl_in_sys=$( echo "${sem_in_sys}" | awk '{print $3}' )
semmns_in_sys=$( echo "${sem_in_sys}" | awk '{print $4}' )
semopm_in_sys=$( echo "${sem_in_sys}" | awk '{print $5}' )
semmni_in_sys=$( echo "${sem_in_sys}" | awk '{print $6}' )
GetSysParam "kernel.shmall" "shmall_in_sys_str"
shmall_in_sys=$( echo "${shmall_in_sys_str}" | awk '{print $3}' )
GetSysParam "kernel.shmmax" "shmmax_in_sys_str"
shmmax_in_sys=$( echo "${shmmax_in_sys_str}" | awk '{print $3}' )
GetSysParam "kernel.shmmni" "shmmni_in_sys_str"
shmmni_in_sys=$( echo "${shmmni_in_sys_str}" | awk '{print $3}' )
GetSysParam "fs.file-max" "filemax_in_sys_str"
filemax_in_sys=$( echo "${filemax_in_sys_str}" | awk '{print $3}' )
GetSysParam "net.ipv4.ip_local_port_range" "lpr_in_sys"
lpr_min_in_sys=$( echo "${lpr_in_sys}" | awk '{print $3}' )
lpr_max_in_sys=$( echo "${lpr_in_sys}" | awk '{print $4}' )
GetSysParam "net.core.rmem_default" "rmemd_in_sys_str"
rmemd_in_sys=$( echo "${rmemd_in_sys_str}" | awk '{print $3}' )
GetSysParam "net.core.rmem_max" "rmemmax_in_sys_str"
rmemmax_in_sys=$( echo "${rmemmax_in_sys_str}" | awk '{print $3}' )
GetSysParam "net.core.wmem_default" "wmemd_in_sys_str"
wmemd_in_sys=$( echo "${wmemd_in_sys_str}" | awk '{print $3}' )
GetSysParam "net.core.wmem_max" "wmemmax_in_sys_str"
wmemmax_in_sys=$( echo "${wmemmax_in_sys_str}" | awk '{print $3}' )
GetSysParam "fs.aio-max-nr" "aio_in_sys_str"
aio_in_sys=$( echo "${aio_in_sys_str}" | awk '{print $3}' )
GetSysParam "vm.hugetlb_shm_group" "shmg_in_sys_str"
shmg_in_sys=$( echo "${shmg_in_sys_str}" | awk '{print $3}' )
echo

if [ -f ${conf_file} ]; then
  GetConfParam "kernel.sem" "sem_in_conf_str" "sem_in_conf"
  #echo "sem_in_conf: \"${sem_in_conf}\""
  semmsl_in_conf=$( echo "${sem_in_conf}" | awk '{print $1}' )
  semmns_in_conf=$( echo "${sem_in_conf}" | awk '{print $2}' )
  semopm_in_conf=$( echo "${sem_in_conf}" | awk '{print $3}' )
  semmni_in_conf=$( echo "${sem_in_conf}" | awk '{print $4}' )
  GetConfParam "kernel.shmall" "shmall_in_conf_str" "shmall_in_conf"
  GetConfParam "kernel.shmmax" "shmmax_in_conf_str" "shmmax_in_conf"
  GetConfParam "kernel.shmmni" "shmmni_in_conf_str" "shmmni_in_conf"
  GetConfParam "fs.file-max" "filemax_in_conf_str" "filemax_in_conf"
  GetConfParam "net.ipv4.ip_local_port_range" "lpr_in_conf_str" "lpr_in_conf"
  lpr_min_in_conf=$( echo "${lpr_in_conf}" | awk '{print $1}' )
  lpr_max_in_conf=$( echo "${lpr_in_conf}" | awk '{print $2}' )
  GetConfParam "net.core.rmem_default" "rmemd_in_conf_str" "rmemd_in_conf"
  GetConfParam "net.core.rmem_max" "rmemmax_in_conf_str" "rmemmax_in_conf"
  GetConfParam "net.core.wmem_default" "wmemd_in_conf_str" "wmemd_in_conf"
  GetConfParam "net.core.wmem_max" "wmemmax_in_conf_str" "wmemmax_in_conf"
  GetConfParam "fs.aio-max-nr" "aio_in_conf_str" "aio_in_conf"
  GetConfParam "vm.hugetlb_shm_group" "shmg_in_conf_str" "shmg_in_conf"
fi
echo

PrintParams
echo

update_sem="N"
UpdateParam "semmsl" "semmsl_in_sys" "semmsl_in_conf" 250 "update_sem"
UpdateParam "semmns" "semmns_in_sys" "semmns_in_conf" 32000 "update_sem"
UpdateParam "semopm" "semopm_in_sys" "semopm_in_conf" 100 "update_sem"
UpdateParam "semmni" "semmni_in_sys" "semmni_in_conf" 128 "update_sem"

if [ "x${update_sem}" == "xY" ]; then
  if [ ! -z "${sem_in_conf_str}" ]; then
    sudo sed -i "s/${sem_in_conf_str}/kernel.sem = ${semmsl_in_conf} ${semmns_in_conf} ${semopm_in_conf} ${semmni_in_conf}\n/g" ${conf_file}
  else
    sudo sh -c "echo 'kernel.sem = ${semmsl_in_conf} ${semmns_in_conf} ${semopm_in_conf} ${semmni_in_conf}' >> ${conf_file}"
  fi
fi

SetupParam "kernel.shmall" "shmall_in_sys" "shmall_in_conf_str" "shmall_in_conf" 2097152
SetupParam "kernel.shmmax" "shmmax_in_sys" "shmmax_in_conf_str" "shmmax_in_conf" 536870912
SetupParam "kernel.shmmni" "shmmni_in_sys" "shmmni_in_conf_str" "shmmni_in_conf" 4096
SetupParam "fs.file-max" "filemax_in_sys" "filemax_in_conf_str" "filemax_in_conf" 6815744

update_lpr="N"
UpdateParam "net.ipv4.ip_local_port_range min" "lpr_min_in_sys" "lpr_min_in_conf" 9000 "update_lpr" "<="
UpdateParam "net.ipv4.ip_local_port_range max" "lpr_max_in_sys" "lpr_max_in_conf" 65500 "update_lpr"

if [ "${update_lpr}" == "Y" ]; then
  if [ ! -z "${lpr_in_conf_str}" ]; then
    sudo sed -i "s/${lpr_in_conf_str}/net.ipv4.ip_local_port_range = ${lpr_min_in_conf} ${lpr_max_in_conf}\n/g" ${conf_file}
  else
    sudo sh -c "echo 'net.ipv4.ip_local_port_range = ${lpr_min_in_conf} ${lpr_max_in_conf}' >> ${conf_file}"
  fi
fi

SetupParam "net.core.rmem_default" "rmemd_in_sys" "rmemd_in_conf_str" "rmemd_in_conf" 262144
SetupParam "net.core.rmem_max" "rmemmax_in_sys" "rmemmax_in_conf_str" "rmemmax_in_conf" 4194304
SetupParam "net.core.wmem_default" "wmemd_in_sys" "wmemd_in_conf_str" "wmemd_in_conf" 262144
SetupParam "net.core.wmem_max" "wmemmax_in_sys" "wmemmax_in_conf_str" "wmemmax_in_conf" 1048576
SetupParam "fs.aio-max-nr" "aio_in_sys" "aio_in_conf_str" "aio_in_conf" 1048576
echo

echo "Allow dba to allocate hugetlbfs memory."
echo "Please note, only one group can be defined as the vm.hugetlb_shm_group."
echo -n "Get id of ${ORACLE_GROUP} group: "
group_id=$( grep ${ORACLE_GROUP} /etc/group  | awk -F ":" '{print $3}' )

if [ -z "${group_id}" ]; then
  echo -e "\033[37;1;41mError! group_id is empty. Operation will skipped!\033[0m"
else
  echo -e "\033[1;32mDone\033[0m"
  SetupParam "vm.hugetlb_shm_group" "shmg_in_sys" "shmg_in_conf_str" "shmg_in_conf" ${group_id} "=="
fi
echo

#PrintConf

sudo sysctl -p # this is don't work!

echo -e "\033[37;1;41mAttention! Reboot needed!\033[0m"
read -p "Do you want to reboot system (Y/N)?: " user_choice
if [ "x${user_choice}" == "xY" ] || [ "x${user_choice}" == "xy" ]; then
  sudo reboot
fi
